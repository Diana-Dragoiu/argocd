ports:
  elastic:
    port: 9200
    expose:
      default: true
    exposedPort: 9200
  logstash:
    port: 5044
    expose:
      default: true
    exposedPort: 5044
  logstash9621:
    port: 9621
    expose:
      default: true
    exposedPort: 9621
  traefik:
    port: 8080
    expose:
      default: true
    exposedPort: 8080
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
    allowACMEByPass: true
  logstash9620:
    port: 9620
    expose:
      default: true
    exposedPort: 9620
    protocol: TCP
  argocd:
    port: 9001
    expose:
      default: true
    exposedPort: 9001

providers:  # @schema additionalProperties: false
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    ingressClass: "traefik"
  kubernetesIngress:
    enabled: false


api:
  dashboard: true

persistence:
  enabled: true
  name: acme-data
  accessMode: ReadWriteOnce
  size: 1Gi
  path: /data
podSecurityContext: null

initContainers:
  - name: volume-permissions
    image: busybox:latest
    command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
    volumeMounts:
      - name: data
        mountPath: /data  

logs:
  general:
    format:  # @schema enum:["common", "json", null]; type:[string, null]; default: "common"
    level: "DEBUG"  # @schema enum:[TRACE,DEBUG,INFO,WARN,ERROR,FATAL,PANIC]; default: "INFO"
  access:
    enabled: true
    format:  # @schema enum:["common", "json", null]; type:[string, null]; default: "common"
  acme:
    level: "DEBUG"

certificatesResolvers:
  letsencrypt-staging:
    acme:
      email: "diana-teodora.dragoiu@external.o-s.de"
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory # Staging server
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web
  letsencrypt-prod:
    acme:
      email: "diana-teodora.dragoiu@external.o-s.de"
      caServer: https://acme-v02.api.letsencrypt.org/directory # Production server
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web
